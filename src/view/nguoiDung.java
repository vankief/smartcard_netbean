/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connectDB.DataUser;
import connectDB.DataUserDAO;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.nio.ByteBuffer;
import java.security.PublicKey;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javacard.connect.ConnectCard;
import javacard.connect.RSAAppletHelper;
import javax.imageio.ImageIO;
import javax.smartcardio.CardException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;


import javax.swing.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
/**
 *
 * @author PC Nga
 */
public class nguoiDung extends javax.swing.JFrame {

    private boolean isEditing = false;
    public DataUser dataUser;
    public DataUserDAO dAO = new DataUserDAO();

    /**
     * Creates new form nguoiDung
     */
    public nguoiDung() {
        initComponents();
        initInformation();
        editInfor(isEditing);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_sua = new javax.swing.JButton();
        btn_capnhat = new javax.swing.JButton();
        btn_chonAnh = new javax.swing.JButton();
        img_ava = new javax.swing.JLabel();
        txt_ID = new javax.swing.JTextField();
        txt_hoTen = new javax.swing.JTextField();
        txt_ngaySinh = new javax.swing.JTextField();
        txt_diaChi = new javax.swing.JTextField();
        txt_dienThoai = new javax.swing.JTextField();
        btn_thongTin = new javax.swing.JButton();
        btn_doiMaPin = new javax.swing.JButton();
        btn_napTien = new javax.swing.JButton();
        btn_thanhToan = new javax.swing.JButton();
        btn_ngatKetNoi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_sua.setBorderPainted(false);
        btn_sua.setContentAreaFilled(false);
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });
        getContentPane().add(btn_sua, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 560, 170, 50));

        btn_capnhat.setBorderPainted(false);
        btn_capnhat.setContentAreaFilled(false);
        btn_capnhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_capnhatActionPerformed(evt);
            }
        });
        getContentPane().add(btn_capnhat, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 560, 180, 50));

        btn_chonAnh.setBorderPainted(false);
        btn_chonAnh.setContentAreaFilled(false);
        btn_chonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chonAnhActionPerformed(evt);
            }
        });
        getContentPane().add(btn_chonAnh, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 470, 170, 50));
        getContentPane().add(img_ava, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 200, 170, 200));

        txt_ID.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_ID.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        txt_ID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_IDActionPerformed(evt);
            }
        });
        getContentPane().add(txt_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, 380, 60));

        txt_hoTen.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_hoTen.setDisabledTextColor(new java.awt.Color(0, 51, 51));
        getContentPane().add(txt_hoTen, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, 380, 60));

        txt_ngaySinh.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_ngaySinh.setDisabledTextColor(new java.awt.Color(0, 0, 51));
        getContentPane().add(txt_ngaySinh, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 320, 380, 60));

        txt_diaChi.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_diaChi.setDisabledTextColor(new java.awt.Color(51, 0, 51));
        getContentPane().add(txt_diaChi, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 400, 380, 60));

        txt_dienThoai.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txt_dienThoai.setDisabledTextColor(new java.awt.Color(51, 0, 51));
        getContentPane().add(txt_dienThoai, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 470, 380, 60));

        btn_thongTin.setBorderPainted(false);
        btn_thongTin.setContentAreaFilled(false);
        btn_thongTin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thongTinActionPerformed(evt);
            }
        });
        getContentPane().add(btn_thongTin, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 260, 180, 60));

        btn_doiMaPin.setBorderPainted(false);
        btn_doiMaPin.setContentAreaFilled(false);
        btn_doiMaPin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_doiMaPinActionPerformed(evt);
            }
        });
        getContentPane().add(btn_doiMaPin, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 340, 160, 60));

        btn_napTien.setBorderPainted(false);
        btn_napTien.setContentAreaFilled(false);
        btn_napTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_napTienActionPerformed(evt);
            }
        });
        getContentPane().add(btn_napTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 160, 50));

        btn_thanhToan.setBorderPainted(false);
        btn_thanhToan.setContentAreaFilled(false);
        btn_thanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thanhToanActionPerformed(evt);
            }
        });
        getContentPane().add(btn_thanhToan, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 490, 200, 50));

        btn_ngatKetNoi.setBorderPainted(false);
        btn_ngatKetNoi.setContentAreaFilled(false);
        btn_ngatKetNoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ngatKetNoiActionPerformed(evt);
            }
        });
        getContentPane().add(btn_ngatKetNoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 560, 210, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\dev\\smartcard_netbean\\src\\doctorQ\\Home.png")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_IDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_IDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_IDActionPerformed

    private void btn_thongTinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thongTinActionPerformed

    }//GEN-LAST:event_btn_thongTinActionPerformed

    private void btn_doiMaPinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_doiMaPinActionPerformed
        doiMaPin1 doiMaPin = new doiMaPin1();
        doiMaPin.setVisible(true);
        
    }//GEN-LAST:event_btn_doiMaPinActionPerformed

    private void btn_napTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_napTienActionPerformed
        napTien napTien = new napTien();
        napTien.setVisible(true);
       
    }//GEN-LAST:event_btn_napTienActionPerformed

    private void btn_ngatKetNoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ngatKetNoiActionPerformed
        dangNhap dangNhap = new dangNhap();
        dangNhap.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_ngatKetNoiActionPerformed

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        editInfor(true);
    }//GEN-LAST:event_btn_suaActionPerformed

    private void btn_capnhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_capnhatActionPerformed
        String strId = txt_ID.getText().trim();
        String strName = txt_hoTen.getText().trim();
        String strDate = txt_ngaySinh.getText().trim();
        String strDiaChi = txt_diaChi.getText().trim();
        String strPhone = txt_dienThoai.getText().trim();

        if (!checkInfor(strId, strName, strDate, strDiaChi, strPhone)) {
            return;
        }
        dataUser = new DataUser();
        dataUser.setCardId(strId);
        dataUser.setName(strName);
        dataUser.setDob(strDate);
        dataUser.setAddress(strDiaChi);
        dataUser.setPhone(strPhone);

        byte[] byteID = strId.getBytes();
        byte[] byteName = strName.getBytes();
        byte[] byteDate = strDate.getBytes();
        byte[] byteDiaChi = strDiaChi.getBytes();
        byte[] bytePhone = strPhone.getBytes();

        byte[] data = new byte[byteID.length + byteName.length + byteDate.length + bytePhone.length + byteDiaChi.length + 5];
        //byteID
        int offSet = 0;
        System.arraycopy(byteID, 0, data, offSet, byteID.length);
        offSet += byteID.length;
        data[offSet] = (byte) 0x7E;

        //byteName
        offSet += 1;
        System.arraycopy(byteName, 0, data, offSet, byteName.length);
        offSet += byteName.length;
        data[offSet] = (byte) 0x7E;

        //byteDate
        offSet += 1;
        System.arraycopy(byteDate, 0, data, offSet, byteDate.length);
        offSet += byteDate.length;
        data[offSet] = (byte) 0x7E;

        //bytePhone
        offSet += 1;
        System.arraycopy(bytePhone, 0, data, offSet, bytePhone.length);
        offSet += bytePhone.length;
       data[offSet] = (byte) 0x7E;

        //byteDiaChi
        offSet += 1;
        System.arraycopy(byteDiaChi, 0, data, offSet, byteDiaChi.length);
        offSet += byteDiaChi.length;
        data[offSet] = (byte) 0x7E;

        if (ConnectCard.getInstance().EditInformation(data)) {
            try {
                PublicKey publicKeys = RSAAppletHelper.getInstance(
                        ConnectCard.getInstance().channel).getPublicKey();
                dataUser.setPublicKey(Arrays.toString(publicKeys.getEncoded()));
            } catch (CardException ex) {
                Logger.getLogger(nguoiDung.class.getName()).log(Level.SEVERE, null, ex);
            }
            reloadInfor();

            System.out.println("Success");

            boolean checkDB = dAO.UpdateUser(dataUser);
            
            if (checkDB) {
                System.out.println("Post Success to DB");
            } else {
                System.out.println("Post Err to DB");
            }
        } else {
            System.out.println("Sending Error");
        }

    }//GEN-LAST:event_btn_capnhatActionPerformed

    private void btn_chonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chonAnhActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileFilter(new JPEGImageFileFilter());
        jfc.showOpenDialog(this);
        File file = jfc.getSelectedFile();

        if (file != null) {
            try {
                if (file.length() > 10000) {
                    BufferedImage originalImage = ImageIO.read(file);
                    BufferedImage compressedImage = compressImage(originalImage, 0.5f); // Sử dụng hàm compressImage để giảm dung lượng ảnh

                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    ImageIO.write(compressedImage, "jpg", bos);
                    byte[] napanh = bos.toByteArray();
                    
                } else {
                    BufferedImage bImage = ImageIO.read(file);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    ImageIO.write(bImage, "jpg", bos);
                    byte[] napanh = bos.toByteArray();
                 
                }

            } catch (IOException ex) {
                Logger.getLogger(nguoiDung.class.getName()).log(Level.SEVERE, null, ex);
            }

            ReviewAvatarUI avatarUI = new ReviewAvatarUI(file, this);
            avatarUI.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            avatarUI.setLocationRelativeTo(null);
            avatarUI.setVisible(true);
        }
    }//GEN-LAST:event_btn_chonAnhActionPerformed

    private void btn_thanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thanhToanActionPerformed
        thanhToan thanhToan = null;
        try {
            thanhToan = new thanhToan();
        } catch (SQLException ex) {
        // Xử lý ngoại lệ SQLException ở đây
        Logger.getLogger(nguoiDung.class.getName()).log(Level.SEVERE, null, ex);
    }
        thanhToan.setVisible(true);
    }//GEN-LAST:event_btn_thanhToanActionPerformed
    private void initInformation() {
        if (ConnectCard.getInstance().ReadInformation()) {
            txt_ID.setText(ConnectCard.getInstance().strID.trim());
            txt_hoTen.setText(ConnectCard.getInstance().strName.trim());
            txt_ngaySinh.setText(ConnectCard.getInstance().strDate.trim());
            txt_diaChi.setText(ConnectCard.getInstance().strDiaChi.trim());
            txt_dienThoai.setText(ConnectCard.getInstance().strPhone.trim());

            System.out.println(ConnectCard.getInstance().strName);
            String add = ConnectCard.getInstance().strName;
            byte[] byteArray = add.getBytes();
            for (int i = 0; i < byteArray.length; i++) {
                System.out.printf("0x%02X", byteArray[i]);
            }
        }
        getImage();
    }

    private void reloadInfor() {
        nguoiDung home = new nguoiDung();
        home.setVisible(true);
        this.dispose();
    }

    public void getImage() {
        BufferedImage imageBuf = ConnectCard.getInstance().DownloadImage();
        if (imageBuf != null) {
            img_ava.setIcon(new ImageIcon(imageBuf));
        } else {
            img_ava.setHorizontalAlignment(JTextField.CENTER);
            img_ava.setText("Chưa cập nhật");
        }
    }

    public class JPEGImageFileFilter extends FileFilter {

        @Override
        public boolean accept(File f) {
            if (f.getName().toLowerCase().endsWith(".jpeg")) {
                return true;
            }
            if (f.getName().toLowerCase().endsWith(".jpg")) {
                return true;
            }
            return f.isDirectory();
        }

        @Override
        public String getDescription() {
            return "JPEG files";
        }

    }

    private boolean checkInfor(String strId, String strName, String strDate, String strDiaChi, String strPhone) {
        boolean check = true;
        if (strId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Mã Bệnh Nhân không được bỏ trống");
            check = false;
        }
        if (strName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Họ Tên không được bỏ trống");
            check = false;
        }
        if (strDate.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ngày sinh không được bỏ trống");
            check = false;
        } else if (!checkDate(strDate)) {
            JOptionPane.showMessageDialog(null, "Ngày sinh không đúng định dạng. VD: 01/01/2000");
            check = false;
        }
        if (strDiaChi.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Địa Chỉ không được bỏ trống");
            check = false;
        }
        if (strPhone.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Số điện thoại không được bỏ trống");
            check = false;
        } else if (!checkPhone(strPhone)) {
            JOptionPane.showMessageDialog(null, "Số điện thoại không đúng định dạng");
            check = false;
        }
        return check;
    }

    private boolean checkDate(String date) {
        SimpleDateFormat sdfrmt = new SimpleDateFormat("dd/MM/yyyy");
        sdfrmt.setLenient(false);
        /* Create Date object
	     * parse the string into date 
         */
        try {
            Date javaDate = sdfrmt.parse(date);
        } /* Date format is invalid */ catch (ParseException e) {
            return false;
        }
        /* Return true if date format is valid */
        return true;
    }

    private boolean checkPhone(String strPhone) {
        if (strPhone.length() == 10
                && strPhone.charAt(0) == '0'
                && (strPhone.charAt(1) == '3' || strPhone.charAt(1) == '5' || strPhone.charAt(1) == '7' || strPhone.charAt(1) == '8' || strPhone.charAt(1) == '9')) {
            for (int i = 2; i < strPhone.length(); i++) {
                if (strPhone.charAt(i) != '0' && strPhone.charAt(i) != '1' && strPhone.charAt(i) != '2' && strPhone.charAt(i) != '3' && strPhone.charAt(i) != '4'
                        && strPhone.charAt(i) != '5' && strPhone.charAt(i) != '6' && strPhone.charAt(i) != '7' && strPhone.charAt(i) != '8' && strPhone.charAt(i) != '9') {
                    return false;
                }
            }
            return true;
        } else {
            return false;
        }
    }

    private void editInfor(boolean b) {
        isEditing = b;
        txt_ID.setEnabled(false);
        txt_hoTen.setEnabled(b);
        txt_dienThoai.setEnabled(b);
        txt_diaChi.setEnabled(b);
        txt_ngaySinh.setEnabled(b);
        btn_chonAnh.setEnabled(b);
    }
    
     private static BufferedImage compressImage(BufferedImage image, float compressionQuality) {
        // Lấy thông số kích thước ảnh ban đầu
        int width = image.getWidth();
        int height = image.getHeight();

        // Tạo một ảnh mới với định dạng RGB
        BufferedImage compressedImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);

        // Lấy đối tượng Graphics của ảnh mới
        java.awt.Graphics2D graphics = compressedImage.createGraphics();

        // Vẽ ảnh ban đầu lên ảnh mới với chất lượng nén
        graphics.drawImage(image, 0, 0, width, height, null);
        graphics.dispose();

        // Tạo đối tượng ByteArrayOutputStream để lưu ảnh nén
        ByteArrayOutputStream bos = new ByteArrayOutputStream();

        try {
            // Ghi ảnh nén vào ByteArrayOutputStream
            ImageIO.write(compressedImage, "jpg", bos);
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Đọc lại ảnh từ ByteArrayOutputStream
        try {
            compressedImage = ImageIO.read(new ByteArrayInputStream(bos.toByteArray()));
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Trả về ảnh đã nén
        return compressedImage;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(nguoiDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(nguoiDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(nguoiDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(nguoiDung.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new nguoiDung().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_capnhat;
    private javax.swing.JButton btn_chonAnh;
    private javax.swing.JButton btn_doiMaPin;
    private javax.swing.JButton btn_napTien;
    private javax.swing.JButton btn_ngatKetNoi;
    private javax.swing.JButton btn_sua;
    private javax.swing.JButton btn_thanhToan;
    private javax.swing.JButton btn_thongTin;
    private javax.swing.JLabel img_ava;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txt_ID;
    private javax.swing.JTextField txt_diaChi;
    private javax.swing.JTextField txt_dienThoai;
    private javax.swing.JTextField txt_hoTen;
    private javax.swing.JTextField txt_ngaySinh;
    // End of variables declaration//GEN-END:variables
}
